---

swagger: '2.0'
info:
  version: '1.0.0'
  title: Patron Store
  description: Secure key-value store for confidential patron information
basePath: /api/v1

x-cors:
  x-cors-access-control-allow-origin-list: PatronStore::Api::V1::corsOriginWhitelist()
  x-cors-access-control-allow-credentials: true
  x-cors-access-control-allow-methods: "*"
  x-cors-access-control-max-age: 3600


### ### DEFINITIONS ### ###
definitions:
  passwordCredentials:
    type: object
    description: Username + password credentials
    required:
      - username
      - password
      - organization
    properties:
      username:
        description: user.username
        type: string
      password:
        description: user.password
        type: string
        format: password
      organization:
        description: organization.name
        type: string


  organization:
    type: object
    description: Organization sharing access to the store
    required:
      - name
    properties:
      id:
        type: integer
      name:
        type: string
      createtime:
        type: string
        format: date-time
      updatetime:
        type: string
        format: date-time


  permission:
    type: object
    description: Permission limiting access to the store
    required:
      - name
    properties:
      id:
        type: integer
      name:
        type: string
      createtime:
        type: string
        format: date-time
      updatetime:
        type: string
        format: date-time


  ssn:
    type: object
    description: The social security number of a person
    required:
      - ssn
    properties:
      id:
        type: integer
      ssn:
        type: string
      organizations:
        type: array
        items:
          description: The organization.name
          type: string


  log:
    type: object
    description: A log entry of any DB access
    required:
      - id
      - userid
      - organizationid
      - request
      - description
      - ip
      - updatetime
    properties:
      id:
        type: integer
      userid:
        description: The user.id
        type: [integer, null]
      organizationid:
        description: The organization.id
        type: [integer, null]
      request:
        type: string
      description:
        type: string
      ip:
        description: Where the request originated from
        type: string
      updatetime:
        type: string
        format: date-time


  user:
    type: object
    description: A user of this store, with specific permissions.
    required:
      - realname
      - username
    properties:
      id:
        type: integer
      realname:
        type: string
      username:
        type: string
        format: byte
      password:
        type: string
        format: password
      organizations:
        type: array
        items:
          description: The organization.name
          type: string
      permissions:
        type: array
        items:
          type: string
### END OF ### DEFINITIONS ### ###


### ### PATHS ### ###
paths:
  /auth:
    post:
      summary: Authenticate
      x-mojo-to: Authenticate#post
      parameters:
        - name: passwordCredentials
          in: body
          schema:
            $ref: '#/definitions/passwordCredentials'
      responses:
        201:
          description: Session created. Sets the PaStor-cookie to track this session.
        401:
          description: Credentials were not accepted
    get:
      summary: Test the authentication validity
      x-mojo-to: Authenticate#get
      responses:
        204:
          description: Session is still valid
        404:
          description: Session is invalid or not found
    delete:
      summary: Close the current session
      x-mojo-to: Authenticate#delete
      responses:
        204:
          description: Session closed
        404:
          description: Session is invalid or not found


  /organizations:
    get:
      summary: Get all organization
      x-mojo-to: Organizations#list
      responses:
        200:
          description: All organization returned
          schema:
            type: array
            items:
              $ref: '#/definitions/organization'
    post:
      summary: Add a new organization
      x-mojo-to: Organizations#post
      parameters:
        - name: organization
          in: body
          schema:
            $ref: '#/definitions/organization'
      responses:
        201:
          description: Organization added succesfully
          schema:
            $ref: '#/definitions/organization'


  /organizations/{id}:
    parameters:
      - name: id
        in: path
        type: string
        description: organization.id
        required: true
    get:
      summary: Get the organization
      x-mojo-to: Organizations#get
      responses:
        200:
          description: Organization returned
          schema:
            $ref: '#/definitions/organization'
    delete:
      summary: Delete organization
      x-mojo-to: Organizations#delete
      responses:
        204:
          description: Organization deleted succesfully


  /permissions:
    get:
      summary: Get all permissions
      x-mojo-to: Permissions#list
      responses:
        200:
          description: All permissions returned
          schema:
            type: array
            items:
              $ref: '#/definitions/permission'
    post:
      summary: Add a new permission
      x-mojo-to: Permissions#post
      parameters:
        - name: permission
          in: body
          schema:
            $ref: '#/definitions/permission'
      responses:
        201:
          description: permission added successfully
          schema:
            $ref: '#/definitions/permission'


  /permissions/{id}:
    parameters:
      - name: id
        in: path
        type: integer
        description: permission.id
        required: true
    get:
      summary: Get the permission
      x-mojo-to: Permissions#get
      responses:
        200:
          description: Permission returned
          schema:
            $ref: '#/definitions/permission'
    delete:
      summary: Delete permission
      x-mojo-to: Permissions#delete
      responses:
        204:
          description: Permission deleted succesfully


  /ssns/{id}:
    parameters:
      - name: id
        in: path
        type: string
        description: ssn.id
        required: true
    get:
      summary: Get the social security number
      x-mojo-to: Ssns#get
      description: Gain access to a persons ssn using a anonymized ssn-key.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ssn'
    delete:
      summary: Delete ssn
      x-mojo-to: Ssns#delete
      responses:
        204:
          description: Deletion ok


  /ssns:
    get:
      summary: Get all ssns
      x-mojo-to: Ssns#list
      description: Fetch all ssns in the DB, requires a special permission
      responses:
        200:
          description: All ssns returned
          schema:
            type: array
            items:
              $ref: '#/definitions/ssn'
    post:
      summary: Try adding a new ssn
      x-mojo-to: Ssns#post
      description: Used when testing if a patron already has a ssn stored in the current organization. If no ssn existed, an entry is added to DB. If ssn was present in the DB, the ssnkey is returned.
      parameters:
        - name: ssn
          in: body
          schema:
            $ref: '#/definitions/ssn'
      responses:
        201:
          description: SSN created succesfully for this organization
          schema:
            $ref: '#/definitions/ssn'
        200:
          description: SSN already exists but a dependency is added for this organization
          schema:
            $ref: '#/definitions/ssn'
        409:
          description: Ssn already exists for this given organization
          schema:
            $ref: '#/definitions/ssn'


  /ping:
    get:
      summary: Server heartbeat operation
      x-mojo-to: Ping#get
      description: Is the server responding normally
      security: [ ]
      responses:
        204:
          description: OK


  /logs:
    get:
      summary: Read access logs
      x-mojo-to: Logs#list
      parameters:
        - name: since
          description: Inclusive datetime to fetch logs from
          in: query
          type: string
          format: date-time
        - name: until
          description: Inclusive datetime to fetch logs to
          in: query
          type: string
          format: date-time
        - name: userid
          description: Limit results by the given user
          in: query
          type: integer
        - name: organizationid
          description: Limit results by the given organization
          in: query
          type: integer
      responses:
        200:
          description: All log entries narrowed with the given parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/log'


  /users:
    get:
      summary: Get all users
      x-mojo-to: Users#list
      responses:
        200:
          description: A list of users
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
    post:
      summary: Add a user
      x-mojo-to: Users#post
      parameters:
        - name: user
          in: body
          schema:
            $ref: '#/definitions/user'
      responses:
        201:
          description: User added
          schema:
            $ref: '#/definitions/user'


  /users/{id}:
    parameters:
      - name: id
        in: path
        type: string
        description: user.id
        required: true
    get:
      summary: Get a user
      x-mojo-to: Users#get
      responses:
        200:
          description: A user
          schema:
            $ref: '#/definitions/user'
    put:
      summary: Modify user
      x-mojo-to: Users#put
      parameters:
        - name: user
          in: body
          schema:
            $ref: '#/definitions/user'
      responses:
        200:
          description: Modified
          schema:
            $ref: '#/definitions/user'
    delete:
      summary: Delete a user
      x-mojo-to: Users#delete
      responses:
        204:
          description: User deleted
### END OF ### PATHS ### ###


